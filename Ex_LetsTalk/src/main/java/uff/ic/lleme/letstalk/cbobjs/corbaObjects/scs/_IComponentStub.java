package uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs;

/**
 * corbaObjects/scs/_IComponentStub.java . Generated by the IDL-to-Java compiler
 * (portable), version "3.2" from scs.idl Sexta-feira, 9 de Dezembro de 2005
 * 18h26min27s BRST
 */
@SuppressWarnings("serial")
public class _IComponentStub extends org.omg.CORBA.portable.ObjectImpl
        implements uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.IComponent {

    public org.omg.CORBA.Object getFacet(String facet_interface)
            throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidName {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request("getFacet",
                    true);
            $out.write_string(facet_interface);
            $in = _invoke($out);
            org.omg.CORBA.Object $result = org.omg.CORBA.ObjectHelper.read($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/InvalidName:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidNameHelper.read($in);
            }
            throw new org.omg.CORBA.MARSHAL(_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return getFacet(facet_interface);
        } finally {
            _releaseReply($in);
        }
    } // getFacet

    public org.omg.CORBA.Object getFacetByName(String facet)
            throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidName {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request(
                    "getFacetByName", true);
            $out.write_string(facet);
            $in = _invoke($out);
            org.omg.CORBA.Object $result = org.omg.CORBA.ObjectHelper.read($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/InvalidName:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidNameHelper.read($in);
            }
            throw new org.omg.CORBA.MARSHAL(_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return getFacetByName(facet);
        } finally {
            _releaseReply($in);
        }
    } // getFacetByName

    public void startup() throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.StartupFailed {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request("startup", true);
            $in = _invoke($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/StartupFailed:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.StartupFailedHelper.read($in);
            }
            throw new org.omg.CORBA.MARSHAL(_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            startup();
        } finally {
            _releaseReply($in);
        }
    } // startup

    public void shutdown() throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ShutdownFailed {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request("shutdown",
                    true);
            $in = _invoke($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/ShutdownFailed:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ShutdownFailedHelper.read($in);
            }
            throw new org.omg.CORBA.MARSHAL(_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            shutdown();
        } finally {
            _releaseReply($in);
        }
    } // shutdown

    // Receptacle
    public int connect(String receptacle, org.omg.CORBA.Object obj)
            throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidName,
            InvalidConnection,
            AlreadyConnected,
            ExceededConnectionLimit {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request("connect", true);
            $out.write_string(receptacle);
            org.omg.CORBA.ObjectHelper.write($out, obj);
            $in = _invoke($out);
            int $result = uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionIdHelper.read($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/InvalidName:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidNameHelper.read($in);
            } else if (_id.equals("IDL:corbaObjects/scs/InvalidConnection:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidConnectionHelper.read($in);
            } else if (_id.equals("IDL:corbaObjects/scs/AlreadyConnected:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.AlreadyConnectedHelper.read($in);
            } else if (_id
                    .equals("IDL:corbaObjects/scs/ExceededConnectionLimit:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ExceededConnectionLimitHelper.read($in);
            } else {
                throw new org.omg.CORBA.MARSHAL(_id);
            }
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return connect(receptacle, obj);
        } finally {
            _releaseReply($in);
        }
    } // connect

    public void disconnect(int id) throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidConnection, 
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.NoConnection {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request("disconnect",
                    true);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionIdHelper.write($out, id);
            $in = _invoke($out);
            return;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/InvalidConnection:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidConnectionHelper.read($in);
            } else if (_id.equals("IDL:corbaObjects/scs/NoConnection:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.NoConnectionHelper.read($in);
            } else {
                throw new org.omg.CORBA.MARSHAL(_id);
            }
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            disconnect(id);
        } finally {
            _releaseReply($in);
        }
    } // disconnect

    public uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionDescription getConnection(int id)
            throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidConnection {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request(
                    "getConnection", true);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionIdHelper.write($out, id);
            $in = _invoke($out);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionDescription $result = uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionDescriptionHelper
                    .read($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/InvalidConnection:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidConnectionHelper.read($in);
            }
            throw new org.omg.CORBA.MARSHAL(_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return getConnection(id);
        } finally {
            _releaseReply($in);
        }
    } // getConnection

    public uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionDescription[] getConnections(
            String receptacle) throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidName {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request(
                    "getConnections", true);
            $out.write_string(receptacle);
            $in = _invoke($out);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionDescription $result[] = uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionDescriptionsHelper
                    .read($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/InvalidName:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidNameHelper.read($in);
            }
            throw new org.omg.CORBA.MARSHAL(_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return getConnections(receptacle);
        } finally {
            _releaseReply($in);
        }
    } // getConnections

    // MetaInterface
    public uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.FacetDescription[] getFacets() {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request("getFacets",
                    true);
            $in = _invoke($out);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.FacetDescription $result[] = uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.FacetDescriptionsHelper
                    .read($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            throw new org.omg.CORBA.MARSHAL(_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return getFacets();
        } finally {
            _releaseReply($in);
        }
    } // getFacets

    public uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.FacetDescription[] getFacetsByName(String[] names)
            throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidName {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request(
                    "getFacetsByName", true);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.NameListHelper.write($out, names);
            $in = _invoke($out);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.FacetDescription $result[] = uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.FacetDescriptionsHelper
                    .read($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/InvalidName:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidNameHelper.read($in);
            }
            throw new org.omg.CORBA.MARSHAL(_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return getFacetsByName(names);
        } finally {
            _releaseReply($in);
        }
    } // getFacetsByName

    public uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ReceptacleDescription[] getReceptacles() {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request(
                    "getReceptacles", true);
            $in = _invoke($out);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ReceptacleDescription $result[] = uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ReceptacleDescriptionsHelper
                    .read($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            throw new org.omg.CORBA.MARSHAL(_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return getReceptacles();
        } finally {
            _releaseReply($in);
        }
    } // getReceptacles

    public uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionDescription[] getReceptacleConnections(
            String receptacle_interface) throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidName,
            InvalidConnection,
            AlreadyConnected,
            ExceededConnectionLimit,
            InternalError {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request(
                    "getReceptacleConnections", true);
            $out.write_string(receptacle_interface);
            $in = _invoke($out);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionDescription $result[] = uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ConnectionDescriptionsHelper
                    .read($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/InvalidName:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidNameHelper.read($in);
            } else if (_id.equals("IDL:corbaObjects/scs/InvalidConnection:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidConnectionHelper.read($in);
            } else if (_id.equals("IDL:corbaObjects/scs/AlreadyConnected:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.AlreadyConnectedHelper.read($in);
            } else if (_id
                    .equals("IDL:corbaObjects/scs/ExceededConnectionLimit:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ExceededConnectionLimitHelper.read($in);
            } else if (_id.equals("IDL:corbaObjects/scs/InternalError:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InternalErrorHelper.read($in);
            } else {
                throw new org.omg.CORBA.MARSHAL(_id);
            }
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return getReceptacleConnections(receptacle_interface);
        } finally {
            _releaseReply($in);
        }
    } // getReceptacleConnections

    public uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ReceptacleDescription[] getReceptaclesByName(
            String[] names) throws uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidName {
        org.omg.CORBA.portable.InputStream $in = null;
        try {
            org.omg.CORBA.portable.OutputStream $out = _request(
                    "getReceptaclesByName", true);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.NameListHelper.write($out, names);
            $in = _invoke($out);
            uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ReceptacleDescription $result[] = uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.ReceptacleDescriptionsHelper
                    .read($in);
            return $result;
        } catch (org.omg.CORBA.portable.ApplicationException $ex) {
            $in = $ex.getInputStream();
            String _id = $ex.getId();
            if (_id.equals("IDL:corbaObjects/scs/InvalidName:1.0")) {
                throw uff.ic.lleme.letstalk.cbobjs.corbaObjects.scs.InvalidNameHelper.read($in);
            }
            throw new org.omg.CORBA.MARSHAL(_id);
        } catch (org.omg.CORBA.portable.RemarshalException $rm) {
            return getReceptaclesByName(names);
        } finally {
            _releaseReply($in);
        }
    } // getReceptaclesByName

    // Type-specific CORBA::Object operations
    private static String[] __ids = {"IDL:corbaObjects/scs/IComponent:1.0"};

    public String[] _ids() {
        return __ids.clone();
    }

    private void readObject(java.io.ObjectInputStream s)
            throws java.io.IOException {
        String str = s.readUTF();
        String[] args = null;
        java.util.Properties props = null;
        org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init(args, props)
                .string_to_object(str);
        org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)
                ._get_delegate();
        _set_delegate(delegate);
    }

    private void writeObject(java.io.ObjectOutputStream s)
            throws java.io.IOException {
        String[] args = null;
        java.util.Properties props = null;
        String str = org.omg.CORBA.ORB.init(args, props).object_to_string(this);
        s.writeUTF(str);
    }
} // class _IComponentStub
